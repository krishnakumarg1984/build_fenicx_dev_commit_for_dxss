name: DOLFINx CI
on: push
jobs:
  build:
    runs-on: ubuntu-22.04
    container: ghcr.io/fenics/test-env:current-openmpi
    # container: krishnakumarvt/fenicsx_testenv:current-openmpi
    env:
      PETSC_ARCH: linux-gnu-real64-64
      OMPI_ALLOW_RUN_AS_ROOT: 1
      OMPI_ALLOW_RUN_AS_ROOT_CONFIRM: 1
      OMPI_MCA_rmaps_base_oversubscribe: 1
      OMPI_MCA_plm: isolated
      OMPI_MCA_btl_vader_single_copy_mechanism: none
      OMPI_MCA_mpi_yield_when_idle: 1
      OMPI_MCA_hwloc_base_binding_policy: none
    name: Build and test linux-gnu-real64-64
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          # cache: 'pip'
          # cache-dependency-path: 'requirements.txt'
      - name: Install FEniCS Python components (pinned to git commits)
        run: |
          python3 -m pip install git+https://github.com/FEniCS/ufl.git@77ae57c4b9594851f6bff4a63b7eecb81477c486
          python3 -m pip install git+https://github.com/FEniCS/basix.git@b172e62288ed1ddabd8c8e7e8c785d15ef4bd101
          python3 -m pip install git+https://github.com/FEniCS/ffcx.git@48ea74f3081b291d5df1471e9612504822574d48
      - name: Install matplotlib
        run: python3 -m pip install matplotlib
      - name: Checkout dolfinx repo
        uses: actions/checkout@v4
        with:
          repository: 'FEniCS/dolfinx'
          path: 'dolfinx'
      - name: Configure the C++ library component of dolfinx
        run: cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -B dolfinx_cpp_build -S ./dolfinx/cpp/
      - name: Build and install dolfinx C++ library
        run: |
          cmake --build dolfinx_cpp_build
          cmake --install dolfinx_cpp_build
    # - name: Build Python interface
    #   run: CMAKE_BUILD_TYPE=Release python3 -m pip -v install python/
    # - name: Set default DOLFINx JIT options
    #   run: |
    #     mkdir -p ~/.config/dolfinx
    #     echo '{ "cffi_extra_compile_args": ["-g0", "-O0" ] }' > ~/.config/dolfinx/dolfinx_jit_options.json
    # - name: Run demos (Python, serial)
    #   run: python3 -m pytest -n=2 -m serial --durations=10 python/demo/test.py
    # - name: Run demos (Python, MPI (np=2))
    #   run: python3 -m pytest -m mpi --num-proc=2 python/demo/test.py
    # - name: Run Python unit tests (serial)
    #   run: python3 -m pytest -n=auto --durations=50 python/test/unit/
    # - name: Run Python unit tests (MPI, np=2)
    #   run: mpirun -np 2 python3 -m pytest python/test/unit/
    # - name: Upload C++ documentation artifact
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: doc-cpp-${{ matrix.petsc_arch }}
    #     path: |
    #       cpp/doc/html/
    #       cpp/doc/build/
    #     retention-days: 2
    #     if-no-files-found: error
    # - name: Upload Python documentation artifact
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: doc-python-${{ matrix.petsc_arch }}
    #     path: |
    #       python/doc/build/html/
    #     retention-days: 2
    #     if-no-files-found: error
    # - name: Checkout FEniCS/docs
    #   if: ${{ github.repository == 'FEniCS/dolfinx' && ( github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v') ) && runner.os == 'Linux' }}
    #   uses: actions/checkout@v4
    #   with:
    #     repository: "FEniCS/docs"
    #     path: "docs"
    #     ssh-key: "${{ secrets.SSH_GITHUB_DOCS_PRIVATE_KEY }}"
    # - name: Set version name
    #   if: ${{ github.repository == 'FEniCS/dolfinx' && ( github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v') ) && runner.os == 'Linux' }}
    #   run: |
    #     echo "VERSION_NAME=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    # - name: Copy documentation into repository
    #   if: ${{ github.repository == 'FEniCS/dolfinx' && ( github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v') ) && runner.os == 'Linux' }}
    #   run: |
    #     cd docs
    #     git rm -r --ignore-unmatch dolfinx/${{ env.VERSION_NAME }}/cpp
    #     git rm -r --ignore-unmatch dolfinx/${{ env.VERSION_NAME }}/python
    #     mkdir -p dolfinx/${{ env.VERSION_NAME }}/cpp
    #     mkdir -p dolfinx/${{ env.VERSION_NAME }}/cpp/doxygen
    #     mkdir -p dolfinx/${{ env.VERSION_NAME }}/python
    #     cp -r ../cpp/doc/build/html/* dolfinx/${{ env.VERSION_NAME }}/cpp/
    #     cp -r ../cpp/doc/html/* dolfinx/${{ env.VERSION_NAME }}/cpp/doxygen
    #     cp -r ../python/doc/build/html/* dolfinx/${{ env.VERSION_NAME }}/python
    # - name: Commit and push documentation to FEniCS/docs
    #   if: ${{ github.repository == 'FEniCS/dolfinx' && ( github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v') ) && runner.os == 'Linux' && matrix.petsc_arch == 'linux-gnu-real64-32' }}
    #   run: |
    #     cd docs
    #     git config --global user.email "fenics@github.com"
    #     git config --global user.name "FEniCS GitHub Actions"
    #     git add --all
    #     git commit --allow-empty -m "C++ FEniCS/dolfinx@${{ github.sha }}"
    #     git push
